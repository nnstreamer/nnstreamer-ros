Name:       nnstreamer-ros
Summary:    nnstreamer extension plugins for ROS support
Version:    0.1.1
Release:    0
Group:      Applications/Multimedia
License:    LGPL-2.1
Source0:    nnstreamer-ros-%{version}.tar.gz
Source1001: nnstreamer-ros.manifest

BuildRequires:  cmake
# boost
BuildRequires:  pkg-config
BuildRequires:  pkgconfig(boost)
# gstremaer
BuildRequires:  pkgconfig(gstreamer-1.0)
BuildRequires:  pkgconfig(gstreamer-base-1.0)
BuildRequires:  pkgconfig(gstreamer-audio-1.0)
BuildRequires:  pkgconfig(gstreamer-video-1.0)
# nnstreamer
BuildRequires:  pkgconfig(nnstreamer)
# ROS
BuildRequires:  ros-kinetic-catkin
BuildRequires:  ros-kinetic-genmsg
BuildRequires:  ros-kinetic-message-generation
BuildRequires:  ros-kinetic-roscpp
BuildRequires:  ros-kinetic-rosbag
# tizen
BuildRequires:  pkgconfig(dlog)
BuildRequires:  pkgconfig(bzip2)
BuildRequires:  pkgconfig(liblz4)
# gtest
BuildRequires:  gtest-devel
%if 0%{?testcoverage}
BuildRequires:  lcov
%endif
# Unit Testing Uses SSAT (hhtps://github.com/myungjoo/SSAT.git)
BuildRequires: ssat
BuildRequires: python

%description
A set of NNStreamer extension plugins for ROS support

%package unittest-coverage
Summary:  NNStreamer-ROS UnitTest Coverage Analysis Result
%description unittest-coverage
HTML pages of lcov results of NNStreamer-ROS generated during rpmbuild

%prep
%setup -q
cp %{SOURCE1001} .

%build
%{__ros_setup}
%if 0%{?testcoverage}
CXXFLAGS="${CXXFLAGS} -fprofile-arcs -ftest-coverage"
CFLAGS="${CFLAGS} -fprofile-arcs -ftest-coverage"
%endif
%__ros_build_pkg '-DROS_BASE_PREFIX=%{__ros_root}/%{__ros_distro}' '-DTIZEN=ON' '-DENABLE_TEST=ON'

%install
%{__ros_setup}
%{__ros_install}
mkdir -p %{buildroot}%{_libdir}/gstreamer-1.0
pushd %{buildroot}%{_libdir}/gstreamer-1.0
RELPATH_ROS_BASE=`python -c "import os.path; print os.path.relpath('%{__ros_install_path}', '%{_libdir}/gstreamer-1.0')"`
ln -s ${RELPATH_ROS_BASE}/lib/gstreamer-1.0/libtensor_ros_sink.so
ln -s ${RELPATH_ROS_BASE}/lib/gstreamer-1.0/libtensor_ros_src.so
popd


%check
pushd build
export GST_PLUGIN_PATH=$(pwd)/gst/tensor_ros_sink:$(pwd)/gst/tensor_ros_src
export BUILD_PATH=$(pwd)
export ROS_VERSION=1
make test ARGS=-V
popd
pushd tests
%{__ros_setup}
ssat -n
popd
%if 0%{?testcoverage}
# Get commit info
VCS=`cat ${RPM_SOURCE_DIR}/nnstreamer-ros.spec | grep "^VCS:" | sed "s|VCS:\\W*\\(.*\\)|\\1|"`

# Create human readable unit test coverate report web page
# Create null gcda files if gcov didn't create it because there is completely no unit test for them.
find . -name "*.gcno" -exec sh -c 'touch -a "${1%.gcno}.gcda"' _ {} \;
# Remove gcda for meaningless file (CMake's autogenerated)
find . -name "CMakeCCompilerId*.gcda" -delete
find . -name "CMakeCXXCompilerId*.gcda" -delete
# Generate report
lcov -t 'NNStreamer-ROS Unit Test Coverage' -o unittest.info -c -d . -b $(pwd) --no-external
# Visualize the report
genhtml -o result unittest.info  -t "nnstreamer-ros %{version}-%{release} ${VCS}" --ignore-errors source -p ${RPM_BUILD_DIR}
mkdir -p %{buildroot}%{_datadir}/%{name}/unittest
cp -r result %{buildroot}%{_datadir}/%{name}/unittest
%endif

%files
%defattr(-,root,root,-)
%manifest nnstreamer-ros.manifest
%license LICENSE
%{_libdir}/gstreamer-1.0/libtensor_ros_sink.so
%{_libdir}/gstreamer-1.0/libtensor_ros_src.so
%{__ros_install_path}/lib/libnns_ros_bridge.so
%{__ros_install_path}/lib/gstreamer-1.0/libtensor_ros_src.so
%{__ros_install_path}/lib/gstreamer-1.0/libtensor_ros_sink.so
%{__ros_install_path}/etc/catkin/profile.d/20.gst_plugin_path.sh
%{__ros_install_path}/lib/python2.7/site-packages/nns_ros_bridge/*
%{__ros_install_path}/share/nns_ros_bridge/cmake/*
%{__ros_install_path}/share/nns_ros_bridge/msg/*
%{__ros_install_path}/share/nns_ros_bridge/package.xml
%{__ros_install_path}/share/nns_ros_bridge/catkin_env_hook/20.gst_plugin_path.sh
%{__ros_install_path}/include/nns_ros_bridge/Tensors.h
%{__ros_install_path}/lib/pkgconfig/nns_ros_bridge.pc
# pyc
%exclude %{__ros_install_path}/lib/python2.7/site-packages/nns_ros_bridge/*.pyc
%exclude %{__ros_install_path}/lib/python2.7/site-packages/nns_ros_bridge/msg/*.pyc
# nodejs
%exclude %{__ros_install_path}/share/gennodejs/ros/nns_ros_bridge/msg/*.js
%exclude %{__ros_install_path}/share/gennodejs/ros/nns_ros_bridge/*.js
# lisp
%exclude %{__ros_install_path}/share/roseus/ros/nns_ros_bridge/*
%exclude %{__ros_install_path}/share/common-lisp/ros/nns_ros_bridge/msg/*

%if 0%{?testcoverage}
%files unittest-coverage
%defattr(-,root,root,-)
%manifest nnstreamer-ros.manifest
%{_datadir}/nnstreamer-ros/unittest/*
%endif

%changelog
* Wed Nov 25 2020 Wook Song <wook16.song@samsung.com>
-  Release of v0.1.1 (The first stable version)
